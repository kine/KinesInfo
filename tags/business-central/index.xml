<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Business Central on Kine&#39;s info</title>
    <link>https://blog.kine.cz/tags/business-central/</link>
    <description>Recent content in Business Central on Kine&#39;s info</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Jan 2024 14:00:00 +0100</lastBuildDate><atom:link href="https://blog.kine.cz/tags/business-central/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SaLi architecture for Microsoft Dynamics 365 Business Central, part 2</title>
      <link>https://blog.kine.cz/posts/sali_part2/</link>
      <pubDate>Thu, 04 Jan 2024 14:00:00 +0100</pubDate>
      
      <guid>https://blog.kine.cz/posts/sali_part2/</guid>
      <description>See previous part first - SaLi architecture for Microsoft Dynamics 365 Business Central, part 1
In previous part we were talking about inter-application Dependencies and their layering which helps with correct dependency structure. But still we have a problem how to decide, which new requested feature will go into which application to keep the architecture clean. To help with this decision making, we created few rules regarding this.
SaLi Naming rule Is there a unique and concise name for the app that describes the functionality?</description>
    </item>
    
    <item>
      <title>SaLi architecture for Microsoft Dynamics 365 Business Central, part 1</title>
      <link>https://blog.kine.cz/posts/sali_part1/</link>
      <pubDate>Tue, 17 Oct 2023 16:30:00 +0200</pubDate>
      
      <guid>https://blog.kine.cz/posts/sali_part1/</guid>
      <description>If you are developing solutions for Microsoft Dynamics 365 Business Central and you are building them from multiple applications (see Split or not to split), may be you are now experiencing some problems with the dependencies between your apps, chaos made by development withouth rules. We were there too and this is example of dependency chart of one our solution: Dependencies before SaLi And because my coleague Jakub Linhart is smart and tried to analyze our existing solutions to find some ways how to make them and our new solutions better, we have noticed some patterns and we tried to make some rules based on these patterns.</description>
    </item>
    
    <item>
      <title>How to publish your local BC containers to internet using IIS</title>
      <link>https://blog.kine.cz/posts/proxy/</link>
      <pubDate>Thu, 18 Aug 2022 12:00:00 +0100</pubDate>
      
      <guid>https://blog.kine.cz/posts/proxy/</guid>
      <description>If you are doing Dynamics 365 Business Central development on your local (not Azure) containers, may be you want to have access to them from outside your local network without using VPN. And not only to BC Web Client, but even to API/OData and development endpoint. And of course you want to have them published with some trusted certificate to be able to use all the functionality like Business Central application, connection from Power BI connectors etc.</description>
    </item>
    
    <item>
      <title>Using BCLicense file from powershell</title>
      <link>https://blog.kine.cz/posts/bclicensestructure/</link>
      <pubDate>Wed, 18 May 2022 00:00:00 +0100</pubDate>
      
      <guid>https://blog.kine.cz/posts/bclicensestructure/</guid>
      <description>New License format .bclicense If you are working with OnPrem customers having Microsoft Dynamics 365 Business Central, you have already noticed the new license file format .bclicense. It was created by Microsoft to have modern way how to pass the licensing info without limits of the old .flf format (limited max size etc.). It had some side-effect (bugs) on beginning but I hope that they are solved (never tested yet). But today I am not writing about this file format because Customers, but because it could be handy for Partners/Developers and their CI/CD pipelines.</description>
    </item>
    
    <item>
      <title>How to translate your AL app from Devglish to Endglish</title>
      <link>https://blog.kine.cz/posts/whytowriteenutranslation/</link>
      <pubDate>Thu, 05 May 2022 00:00:00 +0100</pubDate>
      
      <guid>https://blog.kine.cz/posts/whytowriteenutranslation/</guid>
      <description>Since we started to use VSCode for AL development, I hear discussions that writing UI texts like ToolTips etc. should be done by someone else than developer. And I must agree. We - developers - are lazy kind and writing text is not our popular game. We are able to write some generic text, mostly automagically generated by different tools we are using to write code, but such a text is mostly equal to 0 Shannons (no, I am not talking about @Shannon Mullins).</description>
    </item>
    
    <item>
      <title>Unattended access to local resources - WCF Relay</title>
      <link>https://blog.kine.cz/posts/localfs/</link>
      <pubDate>Thu, 31 Mar 2022 00:00:00 +0100</pubDate>
      
      <guid>https://blog.kine.cz/posts/localfs/</guid>
      <description>In many cases you need to work with resources (files, scales, card readers etc.), which are available on local network/PC, from within Microsoft Dynamics 365 Business Central which runs somewhere in the Cloud. I will show you one way how to solve these things.
What is the problem? Different processes in Business Central can need some local resources of yours. In a simples case it could be some file on your disk on your PC (or server on local network).</description>
    </item>
    
    <item>
      <title>Snapshot debugger on OnPrem - what you need to know to set it up</title>
      <link>https://blog.kine.cz/posts/snapshotdebuggeronprem/</link>
      <pubDate>Tue, 15 Feb 2022 11:00:00 +0100</pubDate>
      
      <guid>https://blog.kine.cz/posts/snapshotdebuggeronprem/</guid>
      <description>When you want to use Snapshot Debugging on your OnPrem environment, may be you can hit this error when trying to initialize it:
Error: The SSL connection could not be established, see inner exception.... In some cirumstances you can even have problem to start the BC Service when you enable the Snapshot Debugger endpoint.
What is the problem? For standard endpoint, which we are using for longer time already, like client endpoint (default port 7046), OData (7048) and Dev (7049), the Management console for BC Server is automatically setting some things in background when you save the settings in it.</description>
    </item>
    
    <item>
      <title>Architecture of PTE - Split or not to Split?</title>
      <link>https://blog.kine.cz/posts/ptearchitecture1/</link>
      <pubDate>Thu, 18 Nov 2021 16:51:00 +0100</pubDate>
      
      <guid>https://blog.kine.cz/posts/ptearchitecture1/</guid>
      <description>On Directions EMEA in Milan I delivered session about Architecture of PTE for Business Central. I was trying to find some rules when or why you should or shouldn&amp;rsquo;t split your PTE into multiple apps. Now I will try to catch this into this article.
Split or not to split Some partners are putting everything into one app per customer. Some are splitting all to separate apps based on different rules like per process, per area etc.</description>
    </item>
    
  </channel>
</rss>
